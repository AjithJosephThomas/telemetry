input {
    # WINLOGBEAT, PACKETBEAT, FILEBEAT
    beats {
        port => 5044
        type => beats
        tags => ["beats"]
    }

}

filter {
    mutate {
        add_field => { "[@metadata][ENV_STAGE]" => "${ENV_STAGE}" }
        add_field => { "[@metadata][DEBUG_OUTPUT]" => "${DEBUG_OUTPUT:false}" }
        # Beat events have useful metadata for filtering, which is lost when sent to Kinesis.
        # Copying the @metadata to a temporary "real" field persists it through the data stream to later processing.
        add_field => { "[original_metadata]" => "%{[@metadata]}" }
    }
    json {
        source => "original_metadata"
        target => "original_metadata"
    }
}

output {

    # -- DEBUG OUTPUT IF REQUIRED
    if [@metadata][DEBUG_OUTPUT] == "true" {
        stdout {
            codec  => rubydebug {
                metadata => true
            }
        }
    }

    kinesis {
        region => "${AWS_REGION}"
        stream_name => "${KINESIS_STREAM_NAME}"
        kinesis_endpoint => "${KINESIS_ENDPOINT}"
        randomized_partition_key => true
        max_pending_records => 10000
    }

}
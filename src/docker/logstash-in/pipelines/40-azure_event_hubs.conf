input {

    azure_event_hubs {
        tags => ["azure_event_hubs"]
        type => azure_event_hubs
        config_mode => "advanced"
        threads => 10
        checkpoint_interval => 30
        storage_connection => "<<STORAGE_CONNECTION_SECRET>>"
        max_batch_size => 500
        event_hubs => [
            {"insights-logs-auditlogs" => {
                event_hub_connection => "<<AUDIT_LOGS_SECRET>>"
                initial_position => "end"
                consumer_group => "soc_logstash"
                storage_container => "<<AUDIT_LOGS_STATE_CONTAINER>>"
            }},
            {"insights-logs-signinlogs" => {
                event_hub_connection => "<<SIGN_IN_LOGS_SECRET>>"
                initial_position => "end"
                consumer_group => "soc_logstash"
                storage_container => "<<SIGN_IN_LOGS_STATE_CONTAINER>>"
            }}
        ]
    }

}

filter {

    mutate {
        add_field => { "[@metadata][ENV_STAGE]" => "${ENV_STAGE}" }
        add_field => { "[@metadata][DEBUG_OUTPUT]" => "${DEBUG_OUTPUT:false}" }
    }

}

output{

    # -- DEBUG OUTPUT IF REQUIRED
    if [@metadata][DEBUG_OUTPUT] == "true" {
        stdout {
            codec  => rubydebug {
                metadata => true
            }
        }
    }

    kinesis {
        region => "${AWS_REGION}"
        stream_name => "${KINESIS_STREAM_NAME}"
        kinesis_endpoint => "${KINESIS_ENDPOINT}"
        randomized_partition_key => true
        max_pending_records => 10000
    }

}
input {
    http_poller {
        urls => {
            pipeline => {
                method => get
                url => "http://localhost:9600/_node/stats/pipelines"
                headers => {
                    Accept => "application/json"
                }
            }
        }
        request_timeout => 10
        schedule => { "every" => "60s" }
        codec => "json"
        type => 'node_stats'
    }

    http_poller {
        urls => {
            pipeline => {
                method => get
                url => "http://localhost:9600/_node/stats/jvm"
                headers => {
                    Accept => "application/json"
                }
            }
        }
        request_timeout => 10
        schedule => { "every" => "60s" }
        codec => "json"
        type => 'jvm_stats'
    }
}

filter {
    mutate {
        add_field => { "[@metadata][ENV_STAGE]" => "${ENV_STAGE}" }
        add_field => { "[@metadata][DEBUG_HEALTHCHECK_OUTPUT]" => "${DEBUG_HEALTHCHECK_OUTPUT:false}" }
    }

    if [type] == "node_stats" {
        clone {
            clones => ["EventDuration", "EventsIn", "EventsOut", "EventsFiltered", "EventsQueuePushDuration"]
        }

        if [type] == "EventDuration" {
            mutate {
                add_tag => ["cloudwatch"]
                add_field => ["CW_metricname", "EventDuration"]
                add_field => ["CW_unit", "Milliseconds"]
                add_field => ["CW_value", "%{[pipelines][parent][events][duration_in_millis]}"]
                add_field => ["CW_dimensions", "host", "CW_dimensions", "%{host}"]
            }
        }
        if [type] == "EventsIn" {
            mutate {
                add_tag => ["cloudwatch"]
                add_field => ["CW_metricname", "EventsIn"]
                add_field => ["CW_unit", "Count"]
                add_field => ["CW_value", "%{[pipelines][parent][events][in]}"]
                add_field => ["CW_dimensions", "host", "CW_dimensions", "%{host}"]
            }
        }
        if [type] == "EventsOut" {
            mutate {
                add_tag => ["cloudwatch"]
                add_field => ["CW_metricname", "EventsOut"]
                add_field => ["CW_unit", "Count"]
                add_field => ["CW_value", "%{[pipelines][parent][events][out]}"]
                add_field => ["CW_dimensions", "host", "CW_dimensions", "%{host}"]
            }
        }
        if [type] == "EventsFiltered" {
            mutate {
                add_tag => ["cloudwatch"]
                add_field => ["CW_metricname", "EventsFiltered"]
                add_field => ["CW_unit", "Count"]
                add_field => ["CW_value", "%{[pipelines][parent][events][filtered]}"]
                add_field => ["CW_dimensions", "host", "CW_dimensions", "%{host}"]
            }
        }
        if [type] == "EventsQueuePushDuration" {
            mutate {
                add_tag => ["cloudwatch"]
                add_field => ["CW_metricname", "EventsQueuePushDuration"]
                add_field => ["CW_unit", "Milliseconds"]
                add_field => ["CW_value", "%{[pipelines][parent][events][queue_push_duration_in_millis]}"]
                add_field => ["CW_dimensions", "host", "CW_dimensions", "%{host}"]
            }
        }
    }


    if [type] == "jvm_stats" {
        clone {
            clones => ["JvmHeapUsedPct", "JvmHeapUsedBytes", "JvmHeapCommittedBytes"]
        }

        if [type] == "JvmHeapUsedPct" {
            mutate {
                add_tag => ["cloudwatch"]
                add_field => ["CW_metricname", "JvmHeapUsedPct"]
                add_field => ["CW_unit", "Percent"]
                add_field => ["CW_value", "%{[jvm][mem][heap_used_percent]}"]
                add_field => ["CW_dimensions", "host", "CW_dimensions", "%{host}"]
            }
        }
        if [type] == "JvmHeapUsedBytes" {
            mutate {
                add_tag => ["cloudwatch"]
                add_field => ["CW_metricname", "JvmHeapUsedBytes"]
                add_field => ["CW_unit", "Bytes"]
                add_field => ["CW_value", "%{[jvm][mem][heap_used_in_bytes]}"]
                add_field => ["CW_dimensions", "host", "CW_dimensions", "%{host}"]
            }
        }
        if [type] == "JvmHeapCommittedBytes" {
            mutate {
                add_tag => ["cloudwatch"]
                add_field => ["CW_metricname", "JvmHeapCommittedBytes"]
                add_field => ["CW_unit", "Bytes"]
                add_field => ["CW_value", "%{[jvm][mem][heap_committed_in_bytes]}"]
                add_field => ["CW_dimensions", "host", "CW_dimensions", "%{host}"]
            }
        }

    }
}

output {
    if "cloudwatch" in [tags] {
        cloudwatch {
            region => "${AWS_REGION}"
            namespace => "Telemetry/${ENV_STAGE:UNKNOWN}/Outbound/${SERVICE_NAME:UNKNOWN}"
        }
    }

    if [@metadata][DEBUG_HEALTHCHECK_OUTPUT] == "true" {
        stdout {
            codec  => rubydebug {
                metadata => true
            }
        }
    }
}
input {
    pipeline {
        address => syslog_pipeline
    }
}

filter {
    
    # Filtering and grok patterns for Syslog depend on the specific types of devices and vendors in your environment.
    # Custom filtering, source identification and field extractions are needed here to make the most of the logging pipeline.

    if [type] == "syslog" {
        grok {
            match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
        }
        
        if [message] == "" or [message] == '"' or [message] == '\"' {
            drop { }
        }
        syslog_pri { }
    }

}

output {
    if [type] == "syslog" {
        s3 {
            region => "${AWS_REGION}"
            bucket => "${CATCHALL_LOG_BUCKET}"
            size_file => "${S3_FILE_MAX_SIZE:2097152}"
            time_file => "${S3_FILE_MAX_TIME:2}"
            encoding => "gzip"
            codec => json_lines
            canned_acl => "bucket-owner-full-control"
            prefix => "type=syslog/year=%{+YYYY}/month=%{+MM}/day=%{+dd}/hour=%{+HH}"
            temporary_directory => "/tmp/logstash/s3/syslog-default"
        }
    }
    
    if [@metadata][DEBUG_OUTPUT] == "true" {
        stdout {
            codec  => rubydebug {
                metadata => true
            }
        }
    }
}